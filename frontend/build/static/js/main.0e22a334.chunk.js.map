{"version":3,"sources":["components/Home/CreateEvent/close.svg","components/NavBar/NavBar.jsx","components/Home/ListaEventos/Evento/Evento.jsx","components/Home/ListaEventos/EventosList.jsx","components/Home/CreateEvent/CreateEvent.jsx","components/Home/CreateReserva/CreateReserva.jsx","components/Home/Home.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","useState","open","setOpen","handleReservas","history","push","handleSession","window","sessionStorage","usuario","clear","className","onClick","style","textDecoration","selected","EventosList","Fragment","src","event","IMAGEN","alt","NOMBRE","date","response","replace","formatDate","FECHA","PRECIO","USUARIO","handleCreateReserva","events","setEvents","useEffect","axios","get","then","data","refresh","map","i","key","CreateEvent","selectedFile","setSelectedFile","error","setError","errorMessage","setErrorMessage","nombreRef","useRef","fileRef","fechaRef","horaRef","cuposRef","precioRef","descripcionRef","handleError","msg","setTimeout","show","close","closeIcon","placeholder","type","ref","maxLength","id","onChange","current","files","name","htmlFor","accept","rows","cols","value","fd","FormData","append","post","headers","Authorization","token","res","catch","err","CreateReserva","createEvent","setCreateEvent","createReserva","setCreateReserva","setRefresh","eventosRef","newEvent","document","body","overflow","scroll","left","top","offsetTop","behavior","register","setRegister","disabled","setDisabled","usuarioRef","contraseñaRef","handleChange","contraseña","console","log","ID","path","render","exact","Boolean","location","hostname","match","createBrowserHistory","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0e22a334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.41ae3b1f.svg\";","import React, { useState } from 'react';\r\nimport '../NavBar/NavBar.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction NavBar(props) {\r\n    let [open, setOpen] = useState(false);\r\n\r\n    let handleHome = () => {\r\n        props.history.push('/');\r\n        setOpen(false);\r\n    };\r\n\r\n    let handleReservas = () => {\r\n        props.history.push('/reservas');\r\n        setOpen(!open);\r\n    };\r\n\r\n    let handleSession = () => {\r\n        if (window.sessionStorage.usuario) {\r\n            props.history.push('/login');\r\n            sessionStorage.clear();\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    };\r\n    return (\r\n        <div className='navBarContainer flexbox'>\r\n            <button onClick={() => setOpen(!open)}>☰</button>\r\n            <h1 onClick={handleHome}>Portal de Eventos</h1>\r\n            <div\r\n                className='navTitlesContainer flexbox'\r\n                onClick={handleReservas}\r\n            >\r\n                <h2\r\n                    style={{\r\n                        textDecoration:\r\n                            props.selected === 'Reservas'\r\n                                ? 'underline'\r\n                                : 'none',\r\n                    }}\r\n                >\r\n                    Reservas\r\n                </h2>\r\n            </div>\r\n            <h3 className='session' onClick={handleSession}>\r\n                {window.sessionStorage.usuario\r\n                    ? 'Cerrar Sesión'\r\n                    : 'Iniciar Sesión'}\r\n            </h3>\r\n            {open && (\r\n                <div className='mobileContainer'>\r\n                    <div\r\n                        className='mobileNavTitlesContainer flexbox'\r\n                        onClick={handleReservas}\r\n                    >\r\n                        <h2\r\n                            style={{\r\n                                textDecoration:\r\n                                    props.selected === 'Reservas'\r\n                                        ? 'underline'\r\n                                        : 'none',\r\n                            }}\r\n                        >\r\n                            Reservas\r\n                        </h2>\r\n                    </div>\r\n                    <h3 className='mobileSession' onClick={handleSession}>\r\n                        {window.sessionStorage.usuario\r\n                            ? 'Cerrar Sesión'\r\n                            : 'Iniciar Sesión'}\r\n                    </h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Evento.css';\r\n\r\nfunction EventosList(props) {\r\n    let formatDate = (date) => {\r\n        let response = date.replace(':00.000Z', '');\r\n        response = response.replace('T', ' ');\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='cardContainer'>\r\n                <div className='imageContainer'>\r\n                    <img src={props.event.IMAGEN} alt='' />\r\n                </div>\r\n                <h2>{props.event.NOMBRE}</h2>\r\n                <h3>{formatDate(props.event.FECHA)}</h3>\r\n                <h3>${props.event.PRECIO}</h3>\r\n                <h3>Organizado por:</h3>\r\n                <h4>{props.event.USUARIO}</h4>\r\n                <button onClick={props.handleCreateReserva}>RESERVAR</button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EventosList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Evento from './Evento/Evento';\r\nimport '../ListaEventos/EventosList.css';\r\nimport axios from 'axios';\r\n\r\nfunction EventosList(props) {\r\n    let [events, setEvents] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('/api/eventos').then((response) => {\r\n            setEvents(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/eventos').then((response) => {\r\n            setEvents(response.data);\r\n        });\r\n    }, [props.refresh]);\r\n\r\n    return (\r\n        <div className='eventsContainer flexbox'>\r\n            {events.map((event, i) => (\r\n                <Evento\r\n                    key={i}\r\n                    event={event}\r\n                    handleCreateReserva={props.handleCreateReserva}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventosList;\r\n","import React, { useRef, useState } from 'react';\r\nimport './CreateEvent.css';\r\nimport closeIcon from './close.svg';\r\nimport axios from 'axios';\r\n\r\nconst CreateEvent = (props) => {\r\n    let [selectedFile, setSelectedFile] = useState(\r\n        'Ningún archivo seleccionado'\r\n    );\r\n    let [error, setError] = useState(false);\r\n    let [errorMessage, setErrorMessage] = useState('');\r\n\r\n    let nombreRef = useRef();\r\n    let fileRef = useRef();\r\n    let fechaRef = useRef();\r\n    let horaRef = useRef();\r\n    let cuposRef = useRef();\r\n    let precioRef = useRef();\r\n    let descripcionRef = useRef();\r\n\r\n    let handleFileSelected = () => {\r\n        setSelectedFile(fileRef.current.files[0].name);\r\n    };\r\n\r\n    let handleSumbit = () => {\r\n        if (\r\n            nombreRef.current.value === '' ||\r\n            !fileRef.current.files[0] ||\r\n            fechaRef.current.value === '' ||\r\n            horaRef.current.value === '' ||\r\n            cuposRef.current.value === '' ||\r\n            precioRef.current.value === '' ||\r\n            descripcionRef.current.value === ''\r\n        ) {\r\n            handleError('Algunos Campos estás incompletos');\r\n        } else {\r\n            const fd = new FormData();\r\n            fd.append('nombre', nombreRef.current.value);\r\n            fd.append('organizador', window.sessionStorage.id);\r\n            fd.append(\r\n                'fecha',\r\n                fechaRef.current.value + ' ' + horaRef.current.value\r\n            );\r\n            fd.append('cupos', cuposRef.current.value);\r\n            fd.append('descripcion', descripcionRef.current.value);\r\n            fd.append('precio', precioRef.current.value);\r\n            fd.append('imagen', fileRef.current.files[0]);\r\n            axios\r\n                .post('/api/eventos', fd, {\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        Authorization: 'Bearer ' + window.sessionStorage.token,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    props.close(true);\r\n                })\r\n                .catch((err) =>\r\n                    handleError('Hubo un error. Intentalo más tarde')\r\n                );\r\n        }\r\n    };\r\n\r\n    let handleError = (msg) => {\r\n        setErrorMessage(msg);\r\n        setError(true);\r\n        setTimeout(() => setError(false), 4000);\r\n    };\r\n\r\n    if (props.show) {\r\n        return (\r\n            <div className='containerCreateEvent'>\r\n                <div className='cardCreateEvent'>\r\n                    <div className='closeButton' onClick={props.close}>\r\n                        <img src={closeIcon} alt='closeIcon' />\r\n                    </div>\r\n                    <h1>Crear Evento</h1>\r\n                    {error && (\r\n                        <div className='errorMessage'>{errorMessage}</div>\r\n                    )}\r\n                    <input\r\n                        className='nombreInput'\r\n                        placeholder='Nombre del evento'\r\n                        type='text'\r\n                        ref={nombreRef}\r\n                        maxLength='50'\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        className='imageInput'\r\n                        type='file'\r\n                        id='file'\r\n                        onChange={handleFileSelected}\r\n                        ref={fileRef}\r\n                    />\r\n                    <label htmlFor='file'>Subir Imagen</label>\r\n                    <label className='fileName'>{selectedFile}</label>\r\n                    <br />\r\n                    <label className='dateLabel'>Fecha: </label>\r\n                    <input\r\n                        className='fechaInput'\r\n                        placeholder=''\r\n                        type='date'\r\n                        ref={fechaRef}\r\n                    />\r\n                    <input\r\n                        className='horaInput'\r\n                        placeholder=''\r\n                        type='time'\r\n                        accept='image/*'\r\n                        ref={horaRef}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        className='cuposInput'\r\n                        placeholder='Cupos Disponibles'\r\n                        type='number'\r\n                        ref={cuposRef}\r\n                        maxLength='20'\r\n                    />\r\n                    $\r\n                    <input\r\n                        className='precioInput'\r\n                        placeholder='Precio por Boleta'\r\n                        type='number'\r\n                        ref={precioRef}\r\n                        maxLength='20'\r\n                    />\r\n                    COP\r\n                    <br />\r\n                    <textarea\r\n                        className='descripcionTextArea'\r\n                        placeholder='Descripción'\r\n                        rows='5'\r\n                        cols='50'\r\n                        ref={descripcionRef}\r\n                        maxLength='1000'\r\n                    />\r\n                    <br />\r\n                    <button onClick={handleSumbit}>Agregar</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default CreateEvent;\r\n","import React from 'react';\r\nimport './CreateReserva.css';\r\n\r\nconst CreateReserva = (props) => {\r\n    {\r\n        if (props.show == true) {\r\n            return (\r\n                <div className='containerCreateReserva'>\r\n                    <div className='cardCreateReserva' onClick={props.close}>\r\n                        Reservas\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n};\r\n\r\nexport default CreateReserva;\r\n","import React, { useState, useRef } from 'react';\r\nimport '../Home/Home.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EventosList from './ListaEventos/EventosList';\r\nimport CreateEvent from './CreateEvent/CreateEvent';\r\nimport CreateReserva from './CreateReserva/CreateReserva';\r\n\r\nfunction Home(props) {\r\n    let [createEvent, setCreateEvent] = useState(false);\r\n    let [createReserva, setCreateReserva] = useState(false);\r\n    let [refresh, setRefresh] = useState(false);\r\n\r\n    let eventosRef = useRef();\r\n\r\n    let handleExplorar = () => {\r\n        window.scroll({\r\n            left: 0,\r\n            top: eventosRef.current.offsetTop - 60,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    let handleCreateEvent = () => {\r\n        if (window.sessionStorage.usuario) {\r\n            document.body.style.overflow = 'hidden';\r\n            setCreateEvent(true);\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    };\r\n    let handleCreateEventClose = (newEvent) => {\r\n        if (newEvent) {\r\n            setRefresh(!refresh);\r\n        }\r\n        document.body.style.overflow = '';\r\n        setCreateEvent(false);\r\n    };\r\n\r\n    let handleCreateReserva = () => {\r\n        if (window.sessionStorage.usuario) {\r\n            document.body.style.overflow = 'hidden';\r\n            setCreateReserva(true);\r\n        } else {\r\n            props.history.push('/login');\r\n        }\r\n    };\r\n\r\n    let handleCreateReservaClose = () => {\r\n        document.body.style.overflow = '';\r\n        setCreateReserva(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CreateEvent show={createEvent} close={handleCreateEventClose} />\r\n            <CreateReserva\r\n                show={createReserva}\r\n                close={handleCreateReservaClose}\r\n            />\r\n            <div className='mainSection'>\r\n                <div className='triangle'></div>\r\n                <div className='welcomeContainer'>\r\n                    <h1>¡Bienvenido!</h1>\r\n                    <p>\r\n                        En esto portal podrás descubrir muchos eventos para\r\n                        asistír. Tendras la posibilidad de reservar tus entradas\r\n                        e incluso de organizar tus propios eventos.\r\n                    </p>\r\n                    <button onClick={handleExplorar}>EXPLORAR EVENTOS</button>\r\n                </div>\r\n            </div>\r\n            <div className='eventsSection' ref={eventosRef}>\r\n                <div className='stickyTitle'>\r\n                    <button\r\n                        className='addEventButton'\r\n                        onClick={handleCreateEvent}\r\n                    >\r\n                        Agregar Evento\r\n                    </button>\r\n                    <h1>Eventos</h1>\r\n                </div>\r\n                <EventosList\r\n                    handleCreateReserva={handleCreateReserva}\r\n                    refresh={refresh}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React, { useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\nfunction Login(props) {\r\n    let [register, setRegister] = useState(false);\r\n    let [error, setError] = useState(false);\r\n    let [errorMessage, setErrorMessage] = useState('');\r\n    let [disabled, setDisabled] = useState(true);\r\n\r\n    let usuarioRef = useRef();\r\n    let contraseñaRef = useRef();\r\n    let nombreRef = useRef();\r\n\r\n    let handleChange = () => {\r\n        setDisabled(\r\n            usuarioRef.current?.value === '' ||\r\n                contraseñaRef.current?.value === '' ||\r\n                nombreRef.current?.value === ''\r\n        );\r\n    };\r\n\r\n    let handleRegisterChange = () => {\r\n        setRegister(!register);\r\n        setError(false);\r\n        setDisabled(true);\r\n        usuarioRef.current.value = '';\r\n        contraseñaRef.current.value = '';\r\n    };\r\n\r\n    let handleError = (msg) => {\r\n        setErrorMessage(msg);\r\n        setError(true);\r\n        setTimeout(() => setError(false), 4000);\r\n    };\r\n\r\n    let handleSend = () => {\r\n        if (!register) {\r\n            axios\r\n                .post('/api/usuarios/login', {\r\n                    usuario: usuarioRef.current.value,\r\n                    contraseña: contraseñaRef.current.value,\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    window.sessionStorage.usuario =\r\n                        response.data.usuario.USUARIO;\r\n                    window.sessionStorage.id = response.data.usuario.ID;\r\n                    window.sessionStorage.token = response.data.token;\r\n                    props.history.push('/');\r\n                })\r\n                .catch((err) => handleError('Credenciales Invalidas'));\r\n        } else {\r\n            axios\r\n                .post('/api/usuarios', {\r\n                    usuario: usuarioRef.current.value,\r\n                    contraseña: contraseñaRef.current.value,\r\n                })\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    window.sessionStorage.usuario = response.data.usuario;\r\n                    window.sessionStorage.id = response.data.id;\r\n                    window.sessionStorage.token = response.data.token;\r\n                    props.history.push('/');\r\n                })\r\n                .catch((err) => handleError('Ya existe ese usuario'));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='loginContainer flexbox'>\r\n            <div className='loginCardContainer'>\r\n                <h1>{register ? 'Crear Cuenta' : 'Iniciar Sesión'}</h1>\r\n                {error && <div className='errorMessage'>{errorMessage}</div>}\r\n                <input\r\n                    placeholder='Usuario'\r\n                    type='text'\r\n                    ref={usuarioRef}\r\n                    onChange={handleChange}\r\n                />\r\n                {register && (\r\n                    <input\r\n                        placeholder='Nombre Completo'\r\n                        type='text'\r\n                        ref={nombreRef}\r\n                        onChange={handleChange}\r\n                    />\r\n                )}\r\n                <input\r\n                    placeholder='Contraseña'\r\n                    type='password'\r\n                    ref={contraseñaRef}\r\n                    onChange={handleChange}\r\n                />\r\n                <h2 onClick={handleRegisterChange}>\r\n                    {register\r\n                        ? '¿Ya tienes Cuenta? Inicia Sesión'\r\n                        : '¿No tienes Cuenta? Registrate'}\r\n                </h2>\r\n                <h2\r\n                    className='skipTitle'\r\n                    onClick={() => props.history.push('/')}\r\n                >\r\n                    Omitir\r\n                </h2>\r\n                <button onClick={handleSend} disabled={disabled}>\r\n                    {register ? 'Registrarse' : 'Iniciar Sesión'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './components/Home/Home';\nimport Login from './components/Login/Login';\n\nfunction App() {\n    return (\n        <div>\n            <Switch>\n                <Route\n                    path='/login'\n                    render={() => {\n                        return <Login />;\n                    }}\n                />\n                <Route\n                    exact\n                    path='/'\n                    render={() => {\n                        return (\n                            <React.Fragment>\n                                <NavBar selected={'Home'} />\n                                <Home />\n                            </React.Fragment>\n                        );\n                    }}\n                />\n                <Route\n                    exact\n                    path='/reservas'\n                    render={() => {\n                        return (\n                            <React.Fragment>\n                                <NavBar selected={'Reservas'} />\n                                <div>Mis Reservas</div>\n                            </React.Fragment>\n                        );\n                    }}\n                />\n            </Switch>\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { Router } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={history}>\n            <App history={history} />\n        </Router>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}